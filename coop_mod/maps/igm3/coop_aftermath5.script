void main();
void setupAi();
void transporterRoom();
void chellOnUse();
void failed1();
void puzzle_solved();
void fixed_transporter();
void unlock_liftdoor();
void player_detected();
void startintro();
void endActorGetInPosition(string s);

//hzm coop mod - chrissstrahl - include the required coop level-scripts
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
void	coop_endLevel();
entity	entityPlayerGlobal;
float	liftSpawnDone = 0;

#include "coop_mod/matrix/main.scr"
#include "coop_mod/matrix/global/global_common.scr"
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

#include "maps/global_scripts/global_debugUtils.scr" 
#include "maps/global_scripts/global_tricorderBase.scr" 
#include "maps/global_scripts/global_tricorderRoute.scr" 
#include "maps/global_scripts/global_tricorderMod.scr" 
#include "maps/global_scripts/global_tricorderKeypad.scr"

float	fTransporterEnabled;

void main()
{
	//hzm coop mod chrissstrahl - author
	coop_string_levelAuthor = "Daedalus";
	
	//hzm coop mod chrissstrahl - declare objectives - english
	coop_string_objectiveItem1 = "Locate the Spy";
	coop_string_objectiveItem2 = "Avoid detection";
	coop_string_objectiveItem3 = "Fix the Transporter";
	coop_string_objectiveItem4 = "Fix Lift";
	coop_string_objectiveTacticalInfo1 = "";//Use the distraction to your own advantage

	//hzm coop mod chrissstrahl - declare objectives - german
	coop_string_objectiveItem1_deu = "Orten Sie den Spion";
	coop_string_objectiveItem2_deu = "Vermeiden Sie entdeckt zu werden";
	coop_string_objectiveItem3_deu = "Reparieren Sie den Transporter";
	coop_string_objectiveItem4_deu = "Reparieren Sie den Lift";
	coop_string_objectiveTacticalInfo1_deu = "";//Use the distraction to your own advantage
	
	coop_string_story = "Aftermath Episode 1 - Romulan Espionage";
	coop_string_story_deu = "Nachwirkungen Episode 1 - Romulanische Spionage";
	
//hzm coop mod chrissstrahl - give weapons to players
	coop_string_weapon4 = "models/weapons/worldmodel-CompressionRifle.tik";
	coop_string_weapon2 = "models/weapons/worldmodel-Phaser-stx.tik";
	coop_string_weapon3 = "models/weapons/worldmodel-Tricorder-stx.tik";
	coop_string_weapon6 = "models/weapons/worldmodel-sniperrifle.tik";
	coop_string_weapon5 = "models/weapons/worldmodel-tetryon.tik";
	coop_string_weapon1 = "models/weapons/worldmodel-rom-disruptor.tik";
	
	cam_fadeout(0.1,0,0,0,1);
	spawn("camera","targetname","cam1");
	spawn("camera","targetname","cam2");
	soundtrack( "music/m10l1-romulan_installation.mus" );
//setup flickering light (dynamic light)
	//0 means repat it(required for mp to work)
	$world.light_lightstyle("pit_flickeringLight","zaaazzzzzzzggggzzaaaaaaaaaaaaaaaaaaaaaaaaazzzzzzzzzggggggggggggggzzzzz",0);
	$world.light_intensity("valve_bad_light",0);
	$modulateSymbol.hide();
	$bad_valve_symbol.hide();
	
	thread setupAi();
//clear/set viewmodes avialbe for Tricorder
	$world.clearAvailableViewModes();
//wait for the player to spawn
	waitForPlayer();
	if(getcvarint("g_gametype") != 1){
		$player.holster(); //holster weapon because you just beat up a rom
	}
	thread startintro();
}


void startintro()
{
	$modulateUseSymbol.scale(0.01);
	$transSymbol.scale(0.01);
	$startmunro.hide();
	$korban.hide();
	$chang.hide();
	$startguard.health(1);	
	$startmunro.notsolid();
	$startmunro.pushable(0);
	$korban.pushable(0);
	$chang.pushable(0);
	
	$startguard_dead.setframe(30,"death4");//script model - set dead animation
	
//load objectives, then inizial
	//wait for player to spawn(sp) or for any player to join the server (mp)
	waitforplayer();
//hzm coop mod chrissstrahl - only in sp
	if(getcvarint("g_gametype") != 1){
		$player.hide();
	}
//wait a moment for the camera to spawn
	wait(1);	
	
//do cinematic commands only in singleplayer	
	cinematic();
	freezeplayer();
	letterbox(0.1);
	$cam1.follow($intro);
	$cam1.cut();//not found
	cuecamera($cam1);//camera now ready to be accessed, now getting camera from teh location it spawned at

//hzm coop mod chrissstrahl - only in sp
	if(getCvarInt("g_gametype") != 1){
		$player.hide();
		$player.notsolid();
	}
	
//wait for the camera to move in to position
	wait(0.1);	
	
//fade in cam
	$startguard.anim("ent-curvedconsole-gesture2");
	$startguard.settendency("work",1);
	cam_fadeIn(0.25,1,1,1,0);
	wait(0.5);
	$spyintro.displayeffect("TransportOut","Romulan");
	wait(2);
	$spyintro.remove();
	wait(1);
	
	
	$cam2.follow($intro2);
	$cam2.cut();
	cuecamera($cam2);
	
	$startmunro.show();
	$startmunro.killattach();
	$korban.show();
	$chang.show();
	$startmunro.walkto("$munroHalt0","walk");
	$korban.walkto("$korbanHalt0","walk");
	$chang.walkto("$changHalt0","walk");
	
	$startguard.turntowardsentity($startmunro);
	wait(0.5);
	$startguard.playDialog("localization/sound/dialog/m2l2/romsold2_fed.mp3",2,128,0);
	wait(1.4);
	//$startmunro.ai_on();
	//$startmunro.attack($startguard);
	//$startmunro.playDialog("localization/sound/dialog/m10l2/munro_yes.mp3",2,256,0);
	while( $startguard.gethealth() > 0){
		$startmunro.animateonce("compressionrifleenhanced_melee1");
		waitForAnimation($startmunro,"compressionrifleenhanced_melee1");
	}
	$startmunro.anim("walk");
	wait(0.25);
	$startmunro.anim("ent-curvedconsole-gesture2");
	wait(0.25);
	$startmunro.playsound("sound/ships/romulan/rom_beep_no.wav",0,1,256);
	wait(1);
	$startmunro.PlayDialog("localization/sound/dialog/m8l2/munro_cancloak.mp3",1,2048);
	$startmunro.anim("idle");
	wait(1);
//fade out cam
	cam_fadeOut(0.25,0,0,0,1);
	wait(0.3);
	noncinematic();
	clearletterbox(0.1);
	cueplayer();
	releaseplayer();
//do cinematic commands only in singleplayer
	if(getCvarInt("g_gametype") != 1){
		$player.show();
		$player.solid();
	}
	$startmunro.hide();
	$startmunro.notsolid();
	$startmunro.notarget();
	$startmunro.ghost();
	
	$startguard.remove();
	cam_fadeIn(0.25,0,0,0,1);
	
	$modulateUseSymbol.scale(1);
	
	globalCoop_objectives_update("incomplete" , 1 , 0 );//locate spy
	globalCoop_objectives_update("incomplete" , 2 , 1 );//avoid detection
}


void setupAi()
//setup all NPCs that require us to do so
{
//do patrol if patrol path is near
	$patrolman.settendency("patrol",1);
//make vison ideal for the player to sneak by the romulan
	$patrolman.fov(10);
	$patrolman.visiondistance(128);
//give slightly more health
	$patrolman.health(60);
	$munrostart.hide();
//control room
	$controlroom_stationary1.settendency("work",1);
	$controlroom_stationary1.health(60);
	$controlroom_stationary2.settendency("work",1);
	$controlroom_stationary2.health(60);
	$controlroom_stationary3.settendency("work",1);
	$controlroom_stationary3.health(60);
	$controlroom_dude.settendency("patrol",1);
	$controlroom_dude.allowFall(1);
}

void transporterRoom()
{
//make security activate, don't know how to do the speaker thing so we'll add this later
	wait(4.0);
	$world.simplePlayDialog("localization/sound/dialog/m5l2/munro_takedown.mp3",1,99999);
	wait(2.0);
	$chell.playDialog("localization/sound/dialog/m5l2/chell_try.mp3",2,128,0);
	waitForDialog( $chell );
	
//Make chell useable for the player, call the given thread if the player press the use buton while close to chell
	$chell.onUse("chellOnUse");
	
//turn chell gets to the console
	$chell.ai_off();
	$chell.pushable ( 0 );
	$chell.warpto("$here");
	$chell.anim( "tricorder_idle" );
	waitforanimation ( $chell, "tricorder_idle" );
	wait ( .2 );
	$chell.anim( "tricorder_fire" );
	wait(4.0);
	$chell.playDialog("localization/sound/dialog/borg02/chell_degen.mp3",2,128,0);
	waitForDialog( $chell );
}

void chellOnUse()
{
//Make him tell munro to use the console
	$chell.playDialog("localization/sound/dialog/borg02/chell_munroneed.mp3",2,128,0);
	waitForDialog( $chell );
}

void transport_puzzle()
{
	//secret door puzzle
	globalTricorderKeypad_SetSecretCode( 5,4,3,2,1,0,0,0,0 ); 
	globalTricorderKeypad_SetType( "romulan" ); 
	globalTricorderKeypad_SetScannedCodeFlag(1); 
	thread globalTricorderKeypad_Run( $transport_fix, 0, 3 ); 
}

void failed1()
{
//Make munro growl
	wait(0.2);
	$world.simplePlayDialog("localization/sound/dialog/combat/munro_attack1.mp3",1,99999);
}

void puzzle_solved()
{
//door unlocks
	$secretdoor.unlock();
}


void modulation_done()
{
//wait a little
	wait(1.0);
//Let chell talk
	$chell.playdialog("localization/sound/dialog/combat/chell_closeone.mp3", 2, 1500,0);
}

void open_hatch()
{
	$modulateUseSymbol.remove();
	$modulateSymbol.show();
	$transport_fix.puzzleobject_activate();
}

void fixed_transporter()
{
	$modulateSymbol.remove();
	fTransporterEnabled	= 1;
	globalCoop_objectives_update("complete" , 3 , 1 );//fix transporter
	$transSymbol.scale(1);
}

void transporter_activate()
{
	if(fTransporterEnabled){
		//move spawnlocation to the other part of the map
		entity e;
		float i;
		for(i=1;i<=8;i++){
			e = getEntity("ipd"+i);
			if(doesEntityExist(e)){
				e.origin('10867 -3950 -1240');
			}else{
				$player1.hudprint("ipd"+i);
			}
		}
		
		//move players to the other part of the map - each player has his own spawn
		if(doesEntityExist($player0)){$player0.origin('10867 -3950 -1230');}//inside transporter
		if(doesEntityExist($player1)){$player1.origin('10931 -4026 -1248');}
		if(doesEntityExist($player2)){$player2.origin('11005 -4026 -1248');}
		if(doesEntityExist($player3)){$player3.origin('11069 -4026 -1248');}
		if(doesEntityExist($player4)){$player4.origin('11125 -4026 -1248');}
		if(doesEntityExist($player5)){$player5.origin('10923 -3878 -1248');}
		if(doesEntityExist($player6)){$player6.origin('10997 -3878 -1248');}
		if(doesEntityExist($player7)){$player7.origin('11061 -3878 -1248');}
		//11117 -3878 -1248
		for(i=0;i<8;i++){
			e = getEntity("player"+i);
			if(doesEntityExist(e)){
				e.playerviewangles('0 0 0');
				e.displayeffect("TransportIn","Romulan");
			}
		}		
	
		$transTrigger.remove();
		$transSymbol.playsound("sound/ships/romulan/rom_beep_yes.wav",0,1,256);
		cinematic();
		freezeplayer();
		letterbox(0.1);	
		$transSymbol.scale(0.01);
		$startmunro.turntowardsentity($chang);
		$startmunro.origin('9078.00 -2438.00 -680.00');
		$startmunro.show();

		$cam2.follow($intro);
		$cam2.cut();
		cuecamera($cam2);
		
		//do cinematic commands only in singleplayer
		if(getCvarInt("g_gametype") != 1){
			$player.notsolid();
			$player.hide();
		}
		$startmunro.show();
		$startmunro.PlayDialog("localization/sound/dialog/m7l1/munro_changsecure.mp3",1,256);	
		waitForDialog($startmunro);
		wait(0.5);
		
		$transSymbol.remove();
		$chang.playDialog("localization/sound/dialog/combat/chang_yessir9.mp3",2,256,0);
		wait(0.5);
		$startmunro.displayeffect("TransportOut","Romulan");
		wait(2);
		
		
		//fade out cam
		cam_fadeOut(0.25,0,0,0,1);
		wait(0.3);
		noncinematic();
		clearletterbox(0.1);
		cueplayer();
		releaseplayer();
		//do cinematic commands only in singleplayer
		if(getCvarInt("g_gametype") != 1){
			$player.show();
			$player.solid();
			$player.origin('10872 -3953 -1224');
			$player.playerviewangles('0 0 0');
			$player.displayeffect("TransportIn","Romulan");
		}

		$startmunro.remove();
		cam_fadeIn(0.25,0,0,0,1);
	}
	else{
		$transSymbol.playsound("sound/ships/romulan/rom_beep_no.wav",0,1,256);
	}
}

void bigroom()
//player observes room
{
	//do cinematic commands only in singleplayer
	if(getCvarInt("g_gametype") != 1){
		stuffCMD("ui_savegamewithname \"Outland - Underground Romulan Base\"");
	}
}

void thelift()
//using the lift
{
	$liftconsole.playsound("sound/ships/romulan/rom_beep_yes.wav",0,1,256);
	$useLiftSymbol.remove();
	
	//spawn 3 enemies per player
	if(!liftSpawnDone){
		liftSpawnDone = 1;
		float i;
		float iSpawn = 3;
		entity e;
		
		iSpawn = (iSpawn * globalCoop_return_integerPlayersQuantity(0));
		
		if(iSpawn > 15){
			iSpawn = 15;
		}
		
		for(i=0;i<iSpawn;i++){
			e = getEntity("theliftSpawn"+i);
			if(doesEntityExist(e)){
				e.spawneffectname("TransportIn","Romulan");
				e.spawnnow();
			}
		}
	}
}

void cinematic_thespy()
//player observes room and sees spy run away
{
//fade screen black, this level starts with a cinematic
	cam_fadeout(0.1,0,0,0,1);
	
//warp munro to area
	$munro.ai_off();
	$munro.pushable ( 0 );
	
//spawn camera entity
	spawn("camera","targetname","cam1");
	
//wait for the camera entity to spawn and the cam to fade black 
	wait(0.1);
	cinematic();
	freezeplayer();
	letterbox(0.1);
//make cam follow the given path entity
	$cam1.follow($cinematicsceneA);
//transition to camera: cut, no transition
	$cam1.cut();
//wait for the camera to get started moving along the path
	wait(0.1);
//switch from player to given camera entity now
	cuecamera($cam1);
	
//position Munro
	$munro.angle(180);
	$munro.killattach();
	$munro.show();
	$munro.headwatch($controlroom_dude);
	
//fade screen from black back in again to normal
	cam_fadeIn(0.25,0,0,0,1);
	
//activate the control room dude, he is set to patrol
	$liftDoor.unlock();
	$controlroom_dude.ai_on();
	wait(6);
	$controlroom_stationary1.ai_on();
	$controlroom_stationary2.ai_on();
	$controlroom_stationary3.ai_on();
	$controlroom_stationary1.removeactorweapon("actorweapons/romulan-disruptor-rifle.tik");
	$controlroom_stationary2.removeactorweapon("actorweapons/romulan-disruptor-rifle.tik");
	$controlroom_stationary3.removeactorweapon("actorweapons/romulan-disruptor-rifle.tik");
	$liftDoor.lock();
//fade screen black
	cam_fadeout(0.9,0,0,0,1);
//wait until the camera has blacked out
	wait(1);
	$munro.anim("idle");
	$munro.hide();
//remove dude, move lift down
	$controlroom_dude.remove();
	if(doesEntityExist($lift)){
		triggerEntity($lift);
	}
//do cinematic commands only in singleplayer
	noncinematic();
	clearletterbox(0.1);
	cueplayer();
	releaseplayer();
//wait until the players sees from his own location again
	wait(0.05);
//fade screen from black back in again to normal
	cam_fadeIn(0.25,0,0,0,1);
}

void fixedlift()
{
	$liftpanel.triggerable();
	$modulateSymbol2.remove();
	$needToRestore.remove();
	wait(0.1);
	$lift2Trigger.triggerable();
	
	globalCoop_objectives_update("complete" , 4 , 1 );//restore lift power
	
	$world.light_intensity("endLight",0);
}
	
void problem()
{
//fade screen black, this level starts with a cinematic
	cam_fadeout(0.1,0,0,0,1);
	
//spawn camera entity, this level starts with a cinematic
	spawn("camera","targetname","cam1");
	
//wait for the camera entity to spawn and the cam to fade black 
	wait(0.1);
    forcemusic ("aux2");
	
	cinematic();
	freezeplayer();
	letterbox(0.1);
//make cam follow the given path entity
	$cam1.follow($cinematic3);
//transition to camera: cut, no transition
	$cam1.cut();
//wait for the camera to get started moving along the path
	wait(0.1);
//switch from player to given camera entity now
	cuecamera($cam1);
//fade screen from black back in again to normal
	cam_fadeIn(0.25,0,0,0,1);
	$doorSpyFlee.open($spy);
	
	float fExplosion;
	entity eExplosion;
	for(fExplosion=0;fExplosion<5;fExplosion++){
		eExplosion = getEntity("grateBlowExplosion"+fExplosion);
		if(doesEntityExist(eExplosion)){
			eExplosion.selfdetonate();
		}
		wait(0.25);
	}
	float fGrate;
	entity eGrate;
	for(fGrate=0;fGrate<4;fGrate++){
		eGrate = getEntity("grateBlow"+fGrate);
		if(doesEntityExist(eGrate)){
			eGrate.moveDown(120);
			eGrate.time(1);
			eGrate.rotateX(10);
		}
	}
	$spy.walkto("$spyFleeNode","walk");
	wait(1);
	for(fGrate=0;fGrate<4;fGrate++){
		eGrate = getEntity("grateBlow"+fGrate);
		if(doesEntityExist(eGrate)){
			eGrate.remove();
		}
	}
	
	
//wait for the camera to get in position
	wait(5);
	$world.simplePlayDialog("localization/sound/dialog/m8l2/munro_cancloak.mp3",1,9999);
	$spy.remove();
//wait
	wait(1);
//fade screen black, this level starts with a cinematic
	cam_fadeout(0.9,0,0,0,1);
//wait until the camera has blacked out
	wait(1.1);
//do cinematic commands only in singleplayer
	noncinematic();
	clearletterbox(0.1);
	cueplayer();
	releaseplayer();
//wait until the players sees from his own location again
	wait(0.05);
//fade screen from black back in again to normal
	cam_fadeIn(0.25,0,0,0,1);
}


void munro_captured()
{
//immobilize player
	if(getCvarInt("g_gametype") != 1){
		$player.immobilize(1);
		$player.nodamage();
	}
//wait for soldiers to spawn
	wait(0.05);
	//fade screen black, this level starts with a cinematic
	cam_fadeout(0.1,0,0,0,1);
	
//spawn camera entity, this level starts with a cinematic
	spawn("camera","targetname","cam1");
	
//wait for the camera entity to spawn and the cam to fade black 
	wait(0.1);
	cinematic();
	freezeplayer();
	letterbox(0.1);
//make cam follow the given path entity
	$cam1.follow($uhoh);
//transition to camera: cut, no transition
	$cam1.cut();
//wait for the camera to get started moving along the path
	wait(0.05);
//switch from player to given camera entity now
	cuecamera($cam1);
//fade screen from black back in again to normal
	cam_fadeIn(0.25,0,0,0,1);
	wait(0.25);
	
//spawn all the enemies
	entity e;
	float i;
	for(i=0;i<8;i++){
		e=getEntity("spawnEndRom"+i);
		if(doesEntityExist(e)){
			e.spawnnow();
			thread endActorGetInPosition("spawnEndRom"+i+"_actor");
		}
		wait(0.1);
	}
	$world.light_intensity("endLight",1);
	
//do not allow the player to hurt/push her
	$spawnEndRom0_actor.nodamage();
	$spawnEndRom0_actor.mass(999999);
	$spawnEndRom0_actor.pushable(0);
//wait for the camera to get in position
	wait(1.8);
	//talk, Surrender!
	$spawnEndRom0_actor.playdialog("localization/sound/dialog/m8l1/idryll_surrdie.mp3",1,256,0);
	waitForDialog( $spawnEndRom0_actor );
	//$John.attack($player);
	
	cam_fadeout(0.9,0,0,0,1);
	wait(2);
	clearletterbox(0.1);
	
	//hzm coop mod chrissstrahl - level end thread
	thread coop_endLevel();
}

void endActorGetInPosition(string s){
	wait(0.1); //wait for actor to spawn
	entity e;
	e=getEntity(s);
	e.anim("walk");
	wait(2);
	e.anim("idle");
	e.turntowardsentity($munro);
}

void unlock_liftdoor()
{
	$use1.scale(0.01);
	$use1.playsound("sound/ships/romulan/rom_beep_yes.wav",0,1,256);
	$liftDoor.unlock();
	$liftDoor.wait(-1);
	$liftDoor.open($world);
	wait(3);
	$use1.remove();
}


void bad_valve()
{
	$bad_valve_symbol.show();
	$world.light_intensity("valve_bad_light",1);
}

void flames_turnOff()
{
	$bad_valve_symbol.remove();
	$bad_valve.rotateXdown(270);
	$bad_valve.time(2);
	wait(2);
	$flameTrigger1.remove();
	$flameTrigger2.remove();
	$flameTrigger3.remove();
	$flame1.remove();
	$flame2.remove();
	$flame3.remove();
}

void restoreLift()
{
	globalCoop_objectives_update("incomplete" , 4 , 1 );//restore lift power
}

void player_detected()
{
	globalCoop_objectives_update("failed" , 2 , 1 );//avoid detection
}

//make trigger play noaccsess sound
void noaccsess()
{
	entity e;
	e=getCurrentEntity();
	if(doesEntityExist(e)){
		e.playsound("sound/ships/romulan/rom_beep_no.wav",0,1,256);
	}
}

//hzm coop mod chrissstrahl - standard coop mod handling
void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
//credits, and history of map
	globalCoop_huds_AddAll("coop_aftermath_credits");
	wait(15);

//load next map
	thread globalCoop_mission_completed("secret1");
}

